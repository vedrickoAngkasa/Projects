// Generated by view binder compiler. Do not edit!
package com.example.drinksorderapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.drinksorderapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CartlistBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView drinkNameinOrderSummary;

  @NonNull
  public final TextView hasCream;

  @NonNull
  public final TextView hasTopping;

  @NonNull
  public final TextView priceinOrderSummary;

  @NonNull
  public final TextView quantityinOrderSummary;

  private CartlistBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView drinkNameinOrderSummary, @NonNull TextView hasCream,
      @NonNull TextView hasTopping, @NonNull TextView priceinOrderSummary,
      @NonNull TextView quantityinOrderSummary) {
    this.rootView = rootView;
    this.drinkNameinOrderSummary = drinkNameinOrderSummary;
    this.hasCream = hasCream;
    this.hasTopping = hasTopping;
    this.priceinOrderSummary = priceinOrderSummary;
    this.quantityinOrderSummary = quantityinOrderSummary;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CartlistBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CartlistBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.cartlist, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CartlistBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.drinkNameinOrderSummary;
      TextView drinkNameinOrderSummary = ViewBindings.findChildViewById(rootView, id);
      if (drinkNameinOrderSummary == null) {
        break missingId;
      }

      id = R.id.hasCream;
      TextView hasCream = ViewBindings.findChildViewById(rootView, id);
      if (hasCream == null) {
        break missingId;
      }

      id = R.id.hasTopping;
      TextView hasTopping = ViewBindings.findChildViewById(rootView, id);
      if (hasTopping == null) {
        break missingId;
      }

      id = R.id.priceinOrderSummary;
      TextView priceinOrderSummary = ViewBindings.findChildViewById(rootView, id);
      if (priceinOrderSummary == null) {
        break missingId;
      }

      id = R.id.quantityinOrderSummary;
      TextView quantityinOrderSummary = ViewBindings.findChildViewById(rootView, id);
      if (quantityinOrderSummary == null) {
        break missingId;
      }

      return new CartlistBinding((RelativeLayout) rootView, drinkNameinOrderSummary, hasCream,
          hasTopping, priceinOrderSummary, quantityinOrderSummary);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
